- hosts: localhost
  vars_files: credentials
  tasks:

  - name: create vpc
    amazon.aws.ec2_vpc_net:
      name: vpc
      region: us-east-2
      aws_access_key: "{{aws_access_key}}"
      aws_secret_key: "{{aws_secret_key}}"
      cidr_block: 10.10.0.0/24
    register: ec2_vpc_net_result

  - name: create subnet
    amazon.aws.ec2_vpc_subnet:
      region: us-east-2
      aws_access_key: "{{aws_access_key}}"
      aws_secret_key: "{{aws_secret_key}}"
      vpc_id: "{{ec2_vpc_net_result.vpc.id}}"
      cidr: 10.10.0.0/26
    register: ec2_vpc_subnet_result

  - name: create igw
    amazon.aws.ec2_vpc_igw:
      region: us-east-2
      aws_access_key: "{{aws_access_key}}"
      aws_secret_key: "{{aws_secret_key}}"
      vpc_id: "{{ec2_vpc_net_result.vpc.id}}"
    register: ec2_vpc_igw_result

  - name: create route
    amazon.aws.ec2_vpc_route_table:
      region: us-east-2
      aws_access_key: "{{aws_access_key}}"
      aws_secret_key: "{{aws_secret_key}}"
      vpc_id: "{{ec2_vpc_net_result.vpc.id}}"
      subnets: "{{ec2_vpc_subnet_result.subnet.id}}"
      routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ec2_vpc_igw_result.gateway_id}}"

  - name: create key pair
    amazon.aws.ec2_key:
      name: key
      region: us-east-2
      aws_access_key: "{{aws_access_key}}"
      aws_secret_key: "{{aws_secret_key}}"
    register: ec2_key_result

  - name: save key pair
    copy:
      content: "{{ec2_key_result.key.private_key}}"
      dest: ./key.pem
      mode: 0400
    when: ec2_key_result.changed

  - name: —Åreate iam
    community.aws.iam_role:
      name: iam
      region: us-east-2
      aws_access_key: "{{aws_access_key}}"
      aws_secret_key: "{{aws_secret_key}}"
      assume_role_policy_document: "{{lookup('file','policy.json')}}"
      managed_policies: arn:aws:iam::aws:policy/PowerUserAccess

  - name: create sg
    amazon.aws.ec2_group:
      name: sg
      region: us-east-2
      aws_access_key: "{{aws_access_key}}"
      aws_secret_key: "{{aws_secret_key}}"
      vpc_id: "{{ec2_vpc_net_result.vpc.id}}"
      description: allow 22, 80
      rules:
        - proto: tcp
          ports: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          ports: 3000
          cidr_ip: 0.0.0.0/0
    register: ec2_group_result

  - name: create ec2
    amazon.aws.ec2:
      region: us-east-2
      aws_access_key: "{{aws_access_key}}"
      aws_secret_key: "{{aws_secret_key}}"
      vpc_subnet_id: "{{ec2_vpc_subnet_result.subnet.id}}"
      assign_public_ip: true
      image: ami-00978328f54e31526
      instance_type: t2.micro
      key_name: key
      group_id: "{{ec2_group_result.group_id}}"
      instance_profile_name: iam
      wait: yes
      wait_timeout: 60
      volumes:
        - device_name: /dev/sda1
          volume_type: gp2
          volume_size: 8
          delete_on_termination: true
    register: ec2_result

  - name: save hosts
    copy:
      content: ubuntu ansible_host={{item.public_ip}}
      dest: ./hosts
      mode: 0400
    with_items: "{{ec2_result.instances}}"
